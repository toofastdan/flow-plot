'''
Plots scatterplots and heatmaps of protein expression from individual cells from csv files generated by the FlowJo software.
@author: Daniel Brock - "toofastdan'
Last updated: 12/12/2019
 '''
#______________________________________________________________________________________________________________________#

# Step 1:  Importing the necessary tools for running this analysis.  We need graphics tools:  seaborn and matplotlib.
# We also need to import the CSV module for efficient importing of our large CSV files.  We need pandas to convert
# strings into floats.

import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import csv

# Step 2:  Setting up the file path to your CSV files and testing if python can parse them.  Replace the default file
# path with the file path specific to your computer.  Data type should be in floats with the exception of the headers.

events = pd.read_csv("C:/Users/ToofastDan/flow-plot/flow-plot/FlowJo Sample CSV Files/export_mouse derived MSCs_BM adh Hx_005_Live_dead.csv")
print(events.head())
print(events.dtypes)

#Step 3:  Setting up the scatterplots using seaborn and matplotlib.  x and y refer to column headers in your csv file.

# Setting the default styling and colors for the following graphs (I want a white background with no gridlines):
sns.set(style="white")
sns.set_palette("bright")

# Scatterplot for FSC-A vs SSC-A (for control)
f, ax = plt.subplots(figsize=(10,10))   # this is the size of the graph
ax = sns.scatterplot(x='FSC-A', y='SSC-A', data=events)
ax.set_title("FSC vs SSC")      #this is the title of the graph
plt.show()

# Scatterplot for FSC-A vs FSC-H (living cells should form a linear line here) - this plot is optional
#f, ax = plt.subplots(figsize=(10,10))
#ax = sns.scatterplot(x='FSC-A', y="FSC-H", data=events)
#ax.set_title("FSC-A vs FSC-H")
#plt.show()

# Scatterplot for some proteins of interest:
f, ax = plt.subplots(figsize=(10,10))
ax = sns.scatterplot(x='APC-Cy7-A :: TER119-CD45', y='Pacific Blue-A :: CD31', data=events)
ax.set_title("Ter119/CD45 vs CD31")

ax.set(xlim=(10,50000), ylim=(50,3000))     #setting the x and y axis to log scale - better for viewing protein data
ax.set_xscale('log')
ax.set_yscale('log')

plt.show()

# Step 4:  Setting up the heatmaps using seaborn and matplotlib to get a better idea of the distribution of cells

plt.figure(figsize=(17,7))
sns.heatmap(events.corr(), annot=True, linewidth=0.3, cmap='Blues')
plt.show()

# Saving the graphs locally in your directory

plt.savefig("C:/Users/ToofastDan/Desktop/flow-plot/figures/heatmap.png", bbox_inches="tight", transparent=True)